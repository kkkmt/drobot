
Общая нагрузка будет вычесляться через представление или через процедуру, форма контроля вбивается вручную и берется из таблицы: MainTable

-------------------------------------------------------

Самостоятельная работа Количество часов - внеаудиторные часы
Обязательная нагрузка Количество часов  - аудиторыне часы
Максимальная нагрузка Количество часов  - внеафдит + аудит

-------------------------------------------------------

ID_* и DateCreate будет создаваться через триггер   

-------------------------------------------------------

Главная таблица будет формироваться с помощью процедуры, данная процедура будет брать данные из клиентской части, тем самым заполняя все данные в таблицах базы данных, далее все эти данные будут обработаны представлением (VIEW), но перед тем как пользователь увидит, он должен выбрать какая группа его интересует и какая дисциплина, далее из предоставленного списка выбрать необходимый календарно - тематический план. Данная выборка будет происходит с помощью запроса.

-------------------------------------------------------

Процедур будет три. Первая процедура будет связана с титульным листом, без ее заполнения к процедуре номер два, нельзя будет приступить. Последняя процедура будет выполняться автоматически, когда 2 процедура будет завершна, третья процедура будет подсчитывать часы максимальной нагрузки, обязательной и самоятельной работы, так же теоретич. занятия, практические заняти, лаб. занятия, курсового проектирования. Данные по 3 процедуре будут хранться в отдельном представлении или в таблице, или будет создан курсор, который автматически будет выводить данные в клиенсткую часть.

-------------------------------------------------------

Пользователь будет вводить вручную: 
		01. ФИО преподователя
		02. Шифр специальности
		03. Название специальности
		04. Наименование учебной дисциплины
		05. Курс
		06. Группа
		07. Форма контроля
		08. План составлен на основании  программы  
		09. Наименование раздела 
		10. Наименование темы/лабораторной
		11. Количество часов

-------------------------------------------------------

Пользователь будет выбирать из выпадающего списка:
		01. Месяц
		02. Вид занятий
		03. Задания для самостоятельной работы   

-------------------------------------------------------

Данный в таблицу MAINTABLE будут вводиться через команду INSERT из клиентсской части : 

INSERT INTO MAINTABLE (    
                        surteach, 
                        nameteach, 
                        middlteach,
                        mnum,
                        mname,
                        namesub,
                        course,
                        mgroupe,
                        progplan,
                         contform  )
    VALUES (  
            'Гусятинер', 
            'Леонид', 
            'Борисович',
            230115,
            'Программирование в компьютерных системах',
            'Теория алгоритмов',
            3,
            '36п',
            '230115-РП-ОП.08-2014',
            'Экзамен' )    

-------------------------------------------------------

Данные в таблицу SECTIONS будут добавлять через команду INSERT, id_main будет передан из таблицы MAINTABLE с помощью функции SEARCH_MAINID() и сохранен в переменную, которая находится в клиентской части, тогда получается, следующее: 

INSERT INTO SECTIONS  (
			VARIABLE, -- Некая переменная, которая хранит в себе актуальное значие id_main, актуальное будет считаться, последнее сохраненное, то есть с большим номером или по дате создания
			SNUM,
			SNAME
		              )
VALUES (
	VARIABLE,
	Номер раздела,
	Название раздела
			 ) 

-------------------------------------------------------

Так как 'вид занятий' и 'задания для самостоятельной работы' выбираются через выпадающий список, который связан с таблицами TYPEOCCUP и TASKSWORKS. Поэтому с помощью функции SEARCH_ID(word, ttable) будет происходить поиск id_type и id_task, и записываться в определенные переменные в клиентской части, далее данные переменные будут передоваться в процедуру INST_TOPICLAB(...). 

-------------------------------------------------------

Создать триггеры для тем, то есть "Тема" || переменная из таблицы TOPICLAB в которой хранятся название тем или лабораторных работ, данный триггер будет распространяться на VIEW 

-------------------------------------------------------

Через этот запрос сделать представление, к этому запросу необходимо добавить две функции, первая функции прибовляет к теме лаб раб или лекции определенные слова и цифры, другая добавляет раздел и номер раздела  

select  s.snum, 
        s.sname, 
        T1.TOPIC, 
        t1.tname, 
        T1.CONHOURSE,
        T1.NCONHOURSE,
        T1.TMONTH, 
        TY.TNAME,
        T1.VISAIDS,
        ta.twname
from    topiclab t1
inner join sections s on s.id_sec = t1.id_sec
inner join typeoccup ty on ty.id_type = t1.id_type
inner join tasksworks ta on ta.id_task = t1.id_task
where t1.id_main = 1041
group by s.snum, 
        s.sname, 
        T1.TOPIC, 
        t1.tname, 
        T1.CONHOURSE,
        T1.NCONHOURSE,
        T1.TMONTH, 
        TY.TNAME,
        T1.VISAIDS,
        ta.twname
 